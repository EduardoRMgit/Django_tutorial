# Generated by Django 2.2.8 on 2022-06-01 21:42

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import scotiabank.utility.custom_storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('banca', '0019_auto_20210512_1150'),
        ('spei', '0018_auto_20220601_1309'),
    ]

    operations = [
        migrations.CreateModel(
            name='Archivo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enviado', models.BooleanField(default=False)),
                ('nombre', models.CharField(blank=True, max_length=69)),
                ('secuencia', models.IntegerField(blank=True, null=True)),
                ('txt', models.FileField(blank=True, null=True, storage=scotiabank.utility.custom_storage.MediaStorage(), upload_to='')),
                ('fecha', models.DateTimeField(auto_now=True)),
                ('tipo_archivo', models.CharField(choices=[('Transferencia', 'Transferencia'), ('Retiro', 'Retiro'), ('Deposito', 'Deposito')], default=False, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='CatalogoCodigosTEF',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('etiqueta', models.CharField(choices=[('00-19', 'ERROR DE CICS'), ('20-50', 'ERROR EN VALIDACION'), ('51-60', 'ERROR EN PAGO VENTANILLA'), ('61-  ', 'ERROR EN ARCHIVOS DEFINITIVOS')], max_length=50)),
                ('codigo', models.CharField(max_length=2)),
                ('descripcion', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ComisionesScotia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaccion', models.CharField(max_length=25, verbose_name='Transacción')),
                ('comision_scotia', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Comisión Scotiabank sin IVA')),
                ('iva', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='IVA')),
                ('comision_inguz', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Comisión Inguz')),
                ('comision_total', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Comisión a cobrar')),
            ],
            options={
                'verbose_name': 'Comisión de scotiabank',
                'verbose_name_plural': 'Comisiones de scotiabank',
            },
        ),
        migrations.CreateModel(
            name='CuentaCargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cuenta', models.CharField(blank=True, max_length=11, null=True)),
                ('activa', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RespuestaScotia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateTimeField(auto_now=True)),
                ('tipo', models.CharField(choices=[('000', 'Por definir'), ('FN2', 'Confirmación de recibido'), ('FN3', 'Resumen movimientos día anterior'), ('FN4', 'Resumen de rechazo día anterior'), ('FN5', 'Confirmación movimiento realizado'), ('H83', 'Resumen de cobranza con recibo')], default='000', max_length=3)),
                ('nombre_archivo', models.CharField(max_length=56, validators=[django.core.validators.MinLengthValidator(52)], verbose_name='Nombre del archivo')),
                ('contenido', models.TextField()),
            ],
            options={
                'verbose_name': 'Respuesta de scotiabank',
                'verbose_name_plural': 'Respuestas scotiabank',
            },
        ),
        migrations.CreateModel(
            name='ScotiaTransferencia',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_trans', models.CharField(blank=True, choices=[('interbancaria', 'Interbancaria'), ('interna', 'Interna')], max_length=20, null=True, verbose_name='Tipo de transferencia')),
                ('statusTrans', models.IntegerField(choices=[(0, 'Por procesar'), (1, 'Archivo generado'), (2, 'Transacción enviada'), (4, 'Transacción recibida con éxito'), (5, 'Transacción realizada'), (6, 'Error al generar archivo'), (7, 'Error al enviar archivo'), (8, 'Transacción fallida')], default=0)),
                ('servicio_concepto', models.CharField(choices=[('01', 'NOMINA'), ('02', 'PENSIONES'), ('03', 'OTRAS TRANSFERENCIAS')], default='03', max_length=2)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('comision', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('fechaOperacion', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('nombreBeneficiario', models.CharField(max_length=40)),
                ('tipoCuentaBeneficiario', models.IntegerField(choices=[(1, 'CUENTA DE CHEQUES'), (3, 'CUENTA (TARJETA) DE DEBITO'), (9, 'CUENTA DE CHEQUES CLABE')], default=9)),
                ('cuentaBeneficiario', models.CharField(blank=True, max_length=20, null=True)),
                ('rfcCurpBeneficiario', models.CharField(blank=True, max_length=18, null=True)),
                ('clave_beneficiario', models.CharField(max_length=20)),
                ('conceptoPago', models.CharField(blank=True, max_length=50, null=True)),
                ('referenciaPago', models.CharField(blank=True, max_length=16, null=True)),
                ('ubicacion', models.CharField(blank=True, max_length=64, null=True)),
                ('balance', models.CharField(blank=True, max_length=10, null=True)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('archivo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='archivo', to='scotiabank.Archivo')),
                ('archivo_respuesta_FN2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='FN2_transaccion', to='scotiabank.RespuestaScotia')),
                ('archivo_respuesta_FN5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='FN5_transaccion', to='scotiabank.RespuestaScotia')),
                ('archivo_resumen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resumen_transaccion', to='scotiabank.RespuestaScotia')),
                ('institucionBeneficiariaInt', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='iB_iB_2', to='spei.InstitutionBanjico')),
                ('ordenante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('status_codigo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scotiabank.CatalogoCodigosTEF')),
                ('transaccion', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banca.Transaccion')),
            ],
        ),
        migrations.CreateModel(
            name='ScotiaRetiro',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fechaOperacion', models.DateTimeField(auto_now=True, null=True)),
                ('statusTrans', models.IntegerField(choices=[(0, 'Por procesar'), (1, 'Archivo generado'), (2, 'Transacción enviada'), (4, 'Transacción recibida con éxito'), (5, 'Transacción realizada'), (6, 'Error al generar archivo'), (7, 'Error al enviar archivo'), (8, 'Transacción fallida')], default=0)),
                ('servicio_concepto', models.CharField(choices=[('01', 'NOMINA'), ('02', 'PENSIONES'), ('03', 'OTRAS TRANSFERENCIAS')], default='03', max_length=2)),
                ('tipoCuentaOrdenante', models.IntegerField(choices=[(1, 'CUENTA DE CHEQUES'), (3, 'CUENTA (TARJETA) DE DEBITO'), (9, 'CUENTA DE CHEQUES CLABE')], default=9)),
                ('monto', models.DecimalField(decimal_places=2, max_digits=15, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('comision', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('clave_retiro', models.CharField(blank=True, max_length=50, null=True)),
                ('conceptoPago', models.CharField(blank=True, max_length=50, null=True)),
                ('referenciaPago', models.CharField(blank=True, max_length=16, null=True)),
                ('ubicacion', models.CharField(blank=True, max_length=64, null=True)),
                ('balance', models.CharField(blank=True, max_length=10, null=True)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('archivo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='retiro', to='scotiabank.Archivo')),
                ('archivo_respuesta_FN2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='FN2_retiro', to='scotiabank.RespuestaScotia')),
                ('archivo_respuesta_FN5', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='FN5_retiro', to='scotiabank.RespuestaScotia')),
                ('archivo_resumen', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resumen_retiro', to='scotiabank.RespuestaScotia')),
                ('ordenante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('status_codigo', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='scotiabank.CatalogoCodigosTEF')),
                ('transaccion', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banca.Transaccion')),
            ],
        ),
        migrations.CreateModel(
            name='ScotiaDeposito',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statusTrans', models.IntegerField(choices=[(0, 'Referencia generada'), (1, 'Esperando respuesta'), (2, 'Depósito recibido'), (4, 'Depósito no recibido'), (5, 'Error al generar referencia'), (6, 'Error en la respuesta')], default=0)),
                ('fecha_inicial', models.DateField(blank=True, null=True)),
                ('referencia_cobranza', models.TextField(blank=True, max_length=30, null=True)),
                ('importe_documento', models.DecimalField(decimal_places=2, max_digits=13, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))], verbose_name='Importe con comision')),
                ('comision', models.DecimalField(blank=True, decimal_places=2, default=0, max_digits=4, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('fecha_limite', models.DateField(blank=True, null=True)),
                ('ubicacion', models.CharField(blank=True, max_length=64, null=True)),
                ('balance', models.CharField(blank=True, max_length=10, null=True)),
                ('time', models.DateTimeField(default=django.utils.timezone.now)),
                ('referencias_resp', models.TextField(blank=True, max_length=250, null=True)),
                ('indicador_forma_pago', models.CharField(blank=True, choices=[('001', 'Efectivo'), ('002', 'Cheque nomativo'), ('003', 'Transferencia'), ('004', 'TDC'), ('028', 'TDD')], max_length=3, null=True)),
                ('nombre_plaza_origen', models.CharField(blank=True, max_length=14, null=True)),
                ('num_plaza_cobro', models.CharField(blank=True, max_length=3, null=True)),
                ('num_sucursal_cobro', models.CharField(blank=True, max_length=3, null=True)),
                ('hora_recepcion_pago', models.TimeField(null=True)),
                ('fecha_presentacion_pago', models.DateField(blank=True, null=True)),
                ('fecha_captura_contable', models.DateField(blank=True, null=True)),
                ('fecha_aplicacion_recursos', models.DateField(blank=True, null=True)),
                ('folio_registro', models.CharField(blank=True, max_length=12, null=True)),
                ('ordenante', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('transaccion', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='banca.Transaccion')),
            ],
        ),
    ]
